{"version":3,"file":"static/js/764.c6f037e8.chunk.js","mappings":"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","sources":["components/Country.tsx","components/Filter.tsx","components/SearchBar.tsx","components/Countries.tsx"],"sourcesContent":["import React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\ninterface Props {\n  flag: string;\n  name: string;\n  population: number;\n  region: string;\n  capital: string;\n}\n\nconst Country = (props: Props) => {\n  const { flag, name, population, region, capital } = props;\n  const navigate = useNavigate();\n\n  const stringedPopulation = population\n    .toString()\n    .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n\n  return (\n    <div onClick={() => navigate(`${name}`)} className=\"country\">\n      <img className=\"country__flag\" src={flag} alt={`${name} flag`} />\n      <div className=\"country__desc\">\n        <h1 className=\"country__desc--name\"> {name} </h1>\n        <div className=\"country__stats\">\n          <p className=\"country__stats--item\">\n            Population:{\" \"}\n            <span className=\"country__stats--value\">{stringedPopulation}</span>{\" \"}\n          </p>\n          <p className=\"country__stats--item\">\n            Region: <span className=\"country__stats--value\">{region}</span>{\" \"}\n          </p>\n          <p className=\"country__stats--item\">\n            Capital: <span className=\"country__stats--value\">{capital}</span>{\" \"}\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Country;\n","import React, { useContext, useState } from \"react\";\nimport { MdKeyboardArrowDown } from \"react-icons/md\";\nimport Context from \"../Context/CountriesContext\";\n\nconst Filter = () => {\n  const { selectedRegion, setSelectedRegion } = useContext(Context);\n  const [showOptions, setShowOptions] = useState(false);\n\n  const options = [\n    \"Filter by Region\",\n    \"Africa\",\n    \"Americas\",\n    \"Asia\",\n    \"Europe\",\n    \"Oceania\",\n  ];\n\n  const option = options.map((opt: string, id) => {\n    return (\n      <div\n        className={\n          opt !== selectedRegion\n            ? \"filter__options--item\"\n            : \"filter__options--item selected\"\n        }\n        key={id}\n      >\n        <label\n          htmlFor={opt}\n          className=\"filter__options--label\"\n          onClick={(e: any) => setSelectedRegion(e.target.htmlFor)}\n        >\n          {opt === \"Filter by Region\" ? \"Reset\" : opt}\n        </label>\n        <input\n          className=\"filter__options--radio\"\n          type=\"radio\"\n          name=\"options\"\n          id={opt}\n          value={opt}\n        />{\" \"}\n      </div>\n    );\n  });\n\n  return (\n    <div className=\"filter\">\n      <div\n        onClick={() => setShowOptions((prev) => !prev)}\n        className=\"filter__select\"\n      >\n        <p className=\"filter__select--current\">{selectedRegion}</p>\n        <MdKeyboardArrowDown className=\"filter__select--arrow\" />\n\n        {showOptions && <div className=\"filter__options\">{option}</div>}\n      </div>\n    </div>\n  );\n};\n\nexport default Filter;\n","import { useContext } from \"react\";\nimport { HiOutlineSearch } from \"react-icons/hi\";\nimport Context from \"../Context/CountriesContext\";\n\nconst SearchBar = () => {\n  const { userInput, setUserInput } = useContext(Context);\n\n  return (\n    <form className=\"search-bar\">\n      <HiOutlineSearch className=\"search-bar__icon\" />\n      <input\n        value={userInput}\n        className=\"search-bar__input\"\n        type=\"text\"\n        placeholder=\"Search for a country...\"\n        onChange={(e) => setUserInput(e.target.value.toLowerCase())}\n      />\n    </form>\n  );\n};\n\nexport default SearchBar;\n","import { useContext } from \"react\";\nimport Context from \"../Context/CountriesContext\";\nimport Country from \"./Country\";\nimport ICountry from \"../models/ICountry\";\nimport Filter from \"./Filter\";\nimport SearchBar from \"./SearchBar\";\n\nconst Countries = () => {\n  const { countries, selectedRegion, userInput } = useContext(Context);\n\n  const displayCountries = countries\n    .filter((country: ICountry) => {\n      const { region } = country;\n\n      if (selectedRegion === \"Filter by Region\") return country;\n      else if (selectedRegion === region) return country;\n      else return null;\n    })\n\n    .filter((country: ICountry) => {\n      const { name } = country;\n      const lowerCasedCountry = name.toLowerCase();\n\n      if (userInput === \"\") return country;\n      else if (lowerCasedCountry.includes(userInput)) return country;\n      else return null;\n    })\n\n    .map((country: ICountry, id: number) => {\n      const { flag, name, region, capital, population } = country;\n\n      return (\n        <Country\n          key={id}\n          name={name}\n          flag={flag}\n          region={region}\n          capital={capital}\n          population={population}\n        />\n      );\n    })\n\n    .slice(0, 12);\n\n  return (\n    <main className=\"countries\">\n      <div className=\"countries__wrapper\">\n        <div className=\"countries__search\">\n          <SearchBar />\n          <Filter />\n        </div>\n        <section className=\"countries__list\">{displayCountries}</section>\n      </div>\n    </main>\n  );\n};\n\nexport default Countries;\n"],"names":["props","flag","name","population","region","capital","navigate","useNavigate","stringedPopulation","toString","replace","onClick","className","src","alt","useContext","Context","selectedRegion","setSelectedRegion","useState","showOptions","setShowOptions","option","map","opt","id","htmlFor","e","target","type","value","prev","userInput","setUserInput","placeholder","onChange","toLowerCase","countries","displayCountries","filter","country","lowerCasedCountry","includes","slice"],"sourceRoot":""}